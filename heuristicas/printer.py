import random
import sys
import os
sys.path.append(os.path.abspath("C:/Users/juani/OneDrive/Escritorio/Facultad/TD8FINAL/TD8"))
from lectura_and_analisis.analisis import calculate_area
from shapely.geometry import Polygon, Point, box
import matplotlib.pyplot as plt
from tqdm import tqdm
import matplotlib.patches
import numpy as np  
import csv
import math
from shapely.geometry import Point, Polygon 
from lectura_and_analisis.analisis import calculate_area

polygon = [(10.0, 0.0), (0.0, 16.0), (0.0, 29.0), (12.0, 33.0), (33.0, 33.0), (46.0, 16.0), (46.0, 6.0), (38.0, 0.0), (10.0, 0.0)]
restrictions = [[(9.0, 22.0), (9.0, 25.0), (12.0, 28.0), (16.0, 29.0), (17.0, 27.0), (12.0, 23.0), (9.0, 22.0)], [(25.0, 22.0), (27.0, 25.0), (29.0, 27.0), (30.0, 25.0), (27.0, 21.0), (25.0, 22.0)], [(25.0, 22.0), (27.0, 21.0), (29.0, 17.0), (27.5, 15.0), (25.0, 17.0), (25.0, 22.0)], [(16.0, 11.0), (17.0, 13.0), (24.0, 8.0), (27.0, 5.0), (26.0, 4.0), (19.0, 7.0), (16.0, 11.0)]]
# 4. Create a rectangle polygon given its center and dimensions
def create_rectangle_polygon(x, y, rect):
    width, height = rect
    return box(x - width / 2, y - height / 2, x + width / 2, y + height / 2)
# 9. Plot the outer polygon, rectangles, and restriction polygons
def plot_polygon_and_rectangles(outer_polygon, rectangles, restrictions):
    fig, ax = plt.subplots()

    # Plot the outer polygon
    outer_poly = Polygon(outer_polygon)
    x, y = outer_poly.exterior.xy
    ax.fill(x, y, alpha=0.5, fc='lightblue', ec='black', label='Outer Polygon')

    for pol in restrictions:
        pol = Polygon(pol)
        x, y = pol.exterior.xy
        ax.fill(x, y, alpha=0.5, fc='blue', ec='black', label='Restriction')

    # Plot each rectangle
    for rect in rectangles:
        x_center, y_center = rect
        (width, height) = (2, 4)
        rectangle_polygon = create_rectangle_polygon(x_center, y_center, (width, height))
        x_rect, y_rect = rectangle_polygon.exterior.xy
        ax.fill(x_rect, y_rect, alpha=0.5, fc='orange', ec='black', label='Rectangle')

    ax.set_aspect('equal')
    plt.show()

solution = [(2.400175088495396, 18.366996080672656), (2.299250145138402, 22.366996080672656), (2.1983252017814077, 26.366996080672656), (4.50110003185239, 14.366996080672655), (4.400175088495397, 18.366996080672656), (4.2992501451384015, 22.366996080672656), (4.198325201781408, 26.366996080672656), (6.602024975209385, 10.366996080672655), (6.50110003185239, 14.366996080672655), (6.400175088495397, 18.366996080672656), (6.2992501451384015, 22.366996080672656), (6.198325201781408, 26.366996080672656), (8.702949918566379, 6.366996080672655), (8.602024975209385, 10.366996080672655), (8.50110003185239, 14.366996080672655), (8.400175088495397, 18.366996080672656), (8.299250145138402, 22.366996080672656), (8.198325201781408, 26.366996080672656), (10.803874861923374, 2.366996080672655), (10.702949918566379, 6.366996080672655), (10.602024975209385, 10.366996080672655), (10.50110003185239, 14.366996080672655), (10.400175088495397, 18.366996080672656), (10.299250145138402, 22.366996080672656), (10.198325201781408, 26.366996080672656), (12.803874861923374, 2.366996080672655), (12.702949918566379, 6.366996080672655), (12.602024975209385, 10.366996080672655), (12.50110003185239, 14.366996080672655), (12.400175088495397, 18.366996080672656), (12.299250145138402, 22.366996080672656), (12.097400258424413, 30.366996080672656), (14.803874861923374, 2.366996080672655), (14.702949918566379, 6.366996080672655), (14.602024975209385, 10.366996080672655), (14.50110003185239, 14.366996080672655), (14.400175088495397, 18.366996080672656), (14.299250145138402, 22.366996080672656), (14.097400258424413, 30.366996080672656), (16.803874861923376, 2.366996080672655), (16.702949918566382, 6.366996080672655), (16.50110003185239, 14.366996080672655), (16.400175088495395, 18.366996080672656), (16.2992501451384, 22.366996080672656), (16.097400258424415, 30.366996080672656), (18.803874861923372, 2.366996080672655), (18.70294991856638, 6.366996080672655), (18.50110003185239, 14.366996080672655), (18.400175088495395, 18.366996080672656), (18.2992501451384, 22.366996080672656), (18.198325201781405, 26.366996080672656), (18.09740025842441, 30.366996080672656), (20.803874861923372, 2.366996080672655), (20.50110003185239, 14.366996080672655), (20.400175088495395, 18.366996080672656), (20.2992501451384, 22.366996080672656), (20.198325201781405, 26.366996080672656), (20.09740025842441, 30.366996080672656), (22.803874861923372, 2.366996080672655), (22.602024975209382, 10.366996080672655), (22.50110003185239, 14.366996080672655), (22.400175088495395, 18.366996080672656), (22.2992501451384, 22.366996080672656), (22.198325201781405, 26.366996080672656), (22.09740025842441, 30.366996080672656), (24.803874861923372, 2.366996080672655), (24.602024975209382, 10.366996080672655), (24.50110003185239, 14.366996080672655), (24.400175088495395, 18.366996080672656), (24.2992501451384, 22.366996080672656), (24.198325201781405, 26.366996080672656), (24.09740025842441, 30.366996080672656), (26.803874861923372, 2.366996080672655), (26.70294991856638, 6.366996080672655), (26.602024975209382, 10.366996080672655), (26.50110003185239, 14.366996080672655), (26.198325201781405, 26.366996080672656), (26.09740025842441, 30.366996080672656), (28.803874861923372, 2.366996080672655), (28.70294991856638, 6.366996080672655), (28.602024975209382, 10.366996080672655), (28.50110003185239, 14.366996080672655), (28.400175088495395, 18.366996080672656), (28.2992501451384, 22.366996080672656), (28.198325201781405, 26.366996080672656), (28.09740025842441, 30.366996080672656), (30.803874861923372, 2.366996080672655), (30.70294991856638, 6.366996080672655), (30.602024975209382, 10.366996080672655), (30.50110003185239, 14.366996080672655), (30.400175088495395, 18.366996080672656), (30.2992501451384, 22.366996080672656), (30.198325201781405, 26.366996080672656), (30.09740025842441, 30.366996080672656), (32.803874861923376, 2.366996080672655), (32.702949918566375, 6.366996080672655), (32.60202497520939, 10.366996080672655), (32.50110003185239, 14.366996080672655), (32.40017508849539, 18.366996080672656), (32.2992501451384, 22.366996080672656), (32.1983252017814, 26.366996080672656), (32.097400258424415, 30.366996080672656), (34.803874861923376, 2.366996080672655), (34.70294991856638, 6.366996080672655), (34.60202497520939, 10.366996080672655), (34.501100031852395, 14.366996080672655), (34.400175088495395, 18.366996080672656), (34.2992501451384, 22.366996080672656), (34.19832520178141, 26.366996080672656), (36.803874861923376, 2.366996080672655), (36.70294991856638, 6.366996080672655), (36.60202497520939, 10.366996080672655), (36.501100031852395, 14.366996080672655), (36.400175088495395, 18.366996080672656), (36.2992501451384, 22.366996080672656), (38.70294991856638, 6.366996080672655), (38.60202497520939, 10.366996080672655), (38.501100031852395, 14.366996080672655), (38.400175088495395, 18.366996080672656), (38.2992501451384, 22.366996080672656), (40.70294991856638, 6.366996080672655), (40.60202497520939, 10.366996080672655), (40.501100031852395, 14.366996080672655), (40.400175088495395, 18.366996080672656), (42.70294991856638, 6.366996080672655), (42.60202497520939, 10.366996080672655), (42.501100031852395, 14.366996080672655), (44.60202497520939, 10.366996080672655), (44.501100031852395, 14.366996080672655)]
plot_polygon_and_rectangles(polygon, solution, restrictions)
print(calculate_area(polygon, [len(solution)], [[2, 4]]))